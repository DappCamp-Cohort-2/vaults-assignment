/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vault2, Vault2Interface } from "../Vault2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600d81526020017f5661756c742057726170706572000000000000000000000000000000000000008152506040518060400160405280600581526020017f5641554c54000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620000b8565b508060049080519060200190620000af929190620000b8565b505050620001cd565b828054620000c69062000168565b90600052602060002090601f016020900481019282620000ea576000855562000136565b82601f106200010557805160ff191683800117855562000136565b8280016001018555821562000136579182015b828111156200013557825182559160200191906001019062000118565b5b50905062000145919062000149565b5090565b5b80821115620001645760008160009055506001016200014a565b5090565b600060028204905060018216806200018157607f821691505b602082108114156200019857620001976200019e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b611d3180620001dd6000396000f3fe6080604052600436106100c25760003560e01c806342966c681161007f578063a0712d6811610059578063a0712d6814610290578063a457c2d7146102ac578063a9059cbb146102e9578063dd62ed3e14610326576100c2565b806342966c68146101ff57806370a082311461022857806395d89b4114610265576100c2565b806306fdde03146100c7578063095ea7b3146100f257806318160ddd1461012f57806323b872dd1461015a578063313ce5671461019757806339509351146101c2575b600080fd5b3480156100d357600080fd5b506100dc610363565b6040516100e9919061151b565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190611236565b6103f5565b6040516101269190611500565b60405180910390f35b34801561013b57600080fd5b50610144610413565b60405161015191906116dd565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c91906111e7565b61041d565b60405161018e9190611500565b60405180910390f35b3480156101a357600080fd5b506101ac610515565b6040516101b991906116f8565b60405180910390f35b3480156101ce57600080fd5b506101e960048036038101906101e49190611236565b61051e565b6040516101f69190611500565b60405180910390f35b34801561020b57600080fd5b5061022660048036038101906102219190611272565b6105ca565b005b34801561023457600080fd5b5061024f600480360381019061024a9190611182565b6106c7565b60405161025c91906116dd565b60405180910390f35b34801561027157600080fd5b5061027a61070f565b604051610287919061151b565b60405180910390f35b6102aa60048036038101906102a59190611272565b6107a1565b005b3480156102b857600080fd5b506102d360048036038101906102ce9190611236565b610833565b6040516102e09190611500565b60405180910390f35b3480156102f557600080fd5b50610310600480360381019061030b9190611236565b61091e565b60405161031d9190611500565b60405180910390f35b34801561033257600080fd5b5061034d600480360381019061034891906111ab565b61093c565b60405161035a91906116dd565b60405180910390f35b6060600380546103729061184c565b80601f016020809104026020016040519081016040528092919081815260200182805461039e9061184c565b80156103eb5780601f106103c0576101008083540402835291602001916103eb565b820191906000526020600020905b8154815290600101906020018083116103ce57829003601f168201915b5050505050905090565b60006104096104026109c3565b84846109cb565b6001905092915050565b6000600254905090565b600061042a848484610b96565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104756109c3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ec906115fd565b60405180910390fd5b610509856105016109c3565b8584036109cb565b60019150509392505050565b60006012905090565b60006105c061052b6109c3565b8484600160006105396109c3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105bb919061173a565b6109cb565b6001905092915050565b6000811161060d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610604906115dd565b60405180910390fd5b6106173382610e17565b60003373ffffffffffffffffffffffffffffffffffffffff168260405161063d906114eb565b60006040518083038185875af1925050503d806000811461067a576040519150601f19603f3d011682016040523d82523d6000602084013e61067f565b606091505b50509050806106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba906115bd565b60405180910390fd5b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461071e9061184c565b80601f016020809104026020016040519081016040528092919081815260200182805461074a9061184c565b80156107975780601f1061076c57610100808354040283529160200191610797565b820191906000526020600020905b81548152906001019060200180831161077a57829003601f168201915b5050505050905090565b600081116107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db906115dd565b60405180910390fd5b803414610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081d9061167d565b60405180910390fd5b6108303334610fee565b50565b600080600160006108426109c3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156108ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f69061169d565b60405180910390fd5b61091361090a6109c3565b858584036109cb565b600191505092915050565b600061093261092b6109c3565b8484610b96565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a329061165d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa29061157d565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b8991906116dd565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfd9061163d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6d9061153d565b60405180910390fd5b610c8183838361114e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfe9061159d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d9a919061173a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dfe91906116dd565b60405180910390a3610e11848484611153565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7e9061161d565b60405180910390fd5b610e938260008361114e565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f109061155d565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610f709190611790565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610fd591906116dd565b60405180910390a3610fe983600084611153565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561105e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611055906116bd565b60405180910390fd5b61106a6000838361114e565b806002600082825461107c919061173a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110d1919061173a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161113691906116dd565b60405180910390a361114a60008383611153565b5050565b505050565b505050565b60008135905061116781611ccd565b92915050565b60008135905061117c81611ce4565b92915050565b60006020828403121561119457600080fd5b60006111a284828501611158565b91505092915050565b600080604083850312156111be57600080fd5b60006111cc85828601611158565b92505060206111dd85828601611158565b9150509250929050565b6000806000606084860312156111fc57600080fd5b600061120a86828701611158565b935050602061121b86828701611158565b925050604061122c8682870161116d565b9150509250925092565b6000806040838503121561124957600080fd5b600061125785828601611158565b92505060206112688582860161116d565b9150509250929050565b60006020828403121561128457600080fd5b60006112928482850161116d565b91505092915050565b6112a4816117d6565b82525050565b60006112b582611713565b6112bf8185611729565b93506112cf818560208601611819565b6112d8816118dc565b840191505092915050565b60006112f0602383611729565b91506112fb826118ed565b604082019050919050565b6000611313602283611729565b915061131e8261193c565b604082019050919050565b6000611336602283611729565b91506113418261198b565b604082019050919050565b6000611359602683611729565b9150611364826119da565b604082019050919050565b600061137c601483611729565b915061138782611a29565b602082019050919050565b600061139f602983611729565b91506113aa82611a52565b604082019050919050565b60006113c2602883611729565b91506113cd82611aa1565b604082019050919050565b60006113e5602183611729565b91506113f082611af0565b604082019050919050565b6000611408602583611729565b915061141382611b3f565b604082019050919050565b600061142b60008361171e565b915061143682611b8e565b600082019050919050565b600061144e602483611729565b915061145982611b91565b604082019050919050565b6000611471604583611729565b915061147c82611be0565b606082019050919050565b6000611494602583611729565b915061149f82611c55565b604082019050919050565b60006114b7601f83611729565b91506114c282611ca4565b602082019050919050565b6114d681611802565b82525050565b6114e58161180c565b82525050565b60006114f68261141e565b9150819050919050565b6000602082019050611515600083018461129b565b92915050565b6000602082019050818103600083015261153581846112aa565b905092915050565b60006020820190508181036000830152611556816112e3565b9050919050565b6000602082019050818103600083015261157681611306565b9050919050565b6000602082019050818103600083015261159681611329565b9050919050565b600060208201905081810360008301526115b68161134c565b9050919050565b600060208201905081810360008301526115d68161136f565b9050919050565b600060208201905081810360008301526115f681611392565b9050919050565b60006020820190508181036000830152611616816113b5565b9050919050565b60006020820190508181036000830152611636816113d8565b9050919050565b60006020820190508181036000830152611656816113fb565b9050919050565b6000602082019050818103600083015261167681611441565b9050919050565b6000602082019050818103600083015261169681611464565b9050919050565b600060208201905081810360008301526116b681611487565b9050919050565b600060208201905081810360008301526116d6816114aa565b9050919050565b60006020820190506116f260008301846114cd565b92915050565b600060208201905061170d60008301846114dc565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061174582611802565b915061175083611802565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117855761178461187e565b5b828201905092915050565b600061179b82611802565b91506117a683611802565b9250828210156117b9576117b861187e565b5b828203905092915050565b60006117cf826117e2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561183757808201518184015260208101905061181c565b83811115611846576000848401525b50505050565b6000600282049050600182168061186457607f821691505b60208210811415611878576118776118ad565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b7f496e76616c696420616d6f756e742c2073686f756c642062652067726561746560008201527f72207468616e20302e0000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b50565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e742c2069742073686f756c6420657175616c2060008201527f74686520616d6f756e74206f662077656920696e20746865207472616e73616360208201527f74696f6e2e000000000000000000000000000000000000000000000000000000604082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611cd6816117c4565b8114611ce157600080fd5b50565b611ced81611802565b8114611cf857600080fd5b5056fea26469706673582212205f6b576cc3c29626fc396fda96fad489a76e17d080d4c97fa07ee1108d91d0b064736f6c63430008040033";

type Vault2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Vault2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault2__factory extends ContractFactory {
  constructor(...args: Vault2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Vault2";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vault2> {
    return super.deploy(overrides || {}) as Promise<Vault2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Vault2 {
    return super.attach(address) as Vault2;
  }
  connect(signer: Signer): Vault2__factory {
    return super.connect(signer) as Vault2__factory;
  }
  static readonly contractName: "Vault2";
  public readonly contractName: "Vault2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Vault2Interface {
    return new utils.Interface(_abi) as Vault2Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault2 {
    return new Contract(address, _abi, signerOrProvider) as Vault2;
  }
}
